[gd_scene load_steps=30 format=2]

[ext_resource path="res://painter/Strokes.tscn" type="PackedScene" id=1]
[ext_resource path="res://shaders/strokes_nueue.gdshader" type="Shader" id=2]
[ext_resource path="res://assets/strokes/dry_1.png" type="Texture" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://SceneManager.tscn" type="PackedScene" id=5]
[ext_resource path="res://assets/2d/leinwand-orange-textur-hintergrund.png" type="Texture" id=6]
[ext_resource path="res://painter/Strokes3D.gd" type="Script" id=7]
[ext_resource path="res://materials/canvaser_material_3d.tres" type="Material" id=8]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D source;
uniform sampler2D brush_texture;
uniform sampler2D canvas;
uniform float canvas_roughness;

const vec2 sampling_offsets[4] = {
	vec2(-128, 0),
	vec2(128, 0),
	vec2(0, -128),
	vec2(0, 128)
};

float grainify(float x, float a) {
	x -= 0.5;
	a -= 0.5;
	return max(min(canvas_roughness * (x + a) + 0.5, 1.0), 0.0);
}

void fragment() {
	vec2 normalized_position = COLOR.xy;
	float angle = COLOR.z;
	float scale = COLOR.w;
	mat3 rotation;
	rotation[0] = vec3(cos(angle), -sin(angle), 0.0);
	rotation[1] = vec3(sin(angle), cos(angle), 0.0);
	rotation[2] = vec3(0.0, 0.0, 1.0);
	
	vec2 uv = normalized_position * vec2(1, -1) + vec2(0, 1);
	
	COLOR.rgb = texture(source, uv).rgb;
//	COLOR.rgb = mix(
//		textureLod(SCREEN_TEXTURE, SCREEN_UV, 5.0).rgb,
//		COLOR.rgb, 0.7
//	);
//	COLOR.r = COLOR.r;
	COLOR.a = texture(brush_texture, UV).a;
//	COLOR.a = COLOR.a * texture(brush_texture, UV).a;
	COLOR.a = grainify(
		texture(canvas, SCREEN_UV).x,
		COLOR.a
	);
//	COLOR.a = texture(canvas, SCREEN_UV).r;
	
	if (scale == 0.0) {
		COLOR.rgb = vec3(0);
		COLOR.a = 1.0;
	}
}
"

[sub_resource type="ViewportTexture" id=16]
viewport_path = NodePath("SceneManager/Base")

[sub_resource type="ShaderMaterial" id=17]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/canvas_roughness = 4.0
shader_param/source = SubResource( 16 )
shader_param/brush_texture = ExtResource( 3 )
shader_param/canvas = ExtResource( 6 )

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0, 0.128889, 0.884444, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="Image" id=60]
data = {
"data": PoolByteArray( 209, 215, 28, 60, 152, 93, 109, 60, 0, 0, 128, 63, 0, 0, 128, 63, 222, 74, 203, 61, 36, 16, 132, 62, 0, 0, 128, 63, 0, 0, 128, 63, 123, 163, 3, 62, 125, 214, 165, 61, 0, 0, 128, 63, 0, 0, 128, 63, 22, 32, 212, 59, 239, 11, 69, 62, 0, 0, 128, 63, 0, 0, 128, 63, 116, 205, 203, 60, 139, 116, 223, 62, 0, 0, 128, 63, 0, 0, 128, 63, 56, 177, 80, 62, 84, 24, 16, 63, 0, 0, 128, 63, 0, 0, 128, 63, 251, 206, 70, 62, 155, 106, 221, 62, 0, 0, 128, 63, 0, 0, 128, 63, 39, 16, 183, 61, 132, 236, 32, 63, 0, 0, 128, 63, 0, 0, 128, 63, 211, 93, 71, 60, 160, 186, 66, 63, 0, 0, 128, 63, 0, 0, 128, 63, 189, 245, 3, 62, 215, 237, 113, 63, 0, 0, 128, 63, 0, 0, 128, 63, 128, 23, 59, 62, 31, 171, 66, 63, 0, 0, 128, 63, 0, 0, 128, 63, 242, 137, 155, 62, 54, 218, 89, 63, 0, 0, 128, 63, 0, 0, 128, 63, 180, 68, 188, 62, 45, 212, 42, 63, 0, 0, 128, 63, 0, 0, 128, 63, 70, 164, 127, 60, 112, 92, 110, 63, 0, 0, 128, 63, 0, 0, 128, 63, 53, 214, 86, 62, 173, 1, 117, 63, 0, 0, 128, 63, 0, 0, 128, 63, 240, 148, 159, 62, 175, 127, 5, 63, 0, 0, 128, 63, 0, 0, 128, 63, 100, 232, 136, 62, 148, 172, 168, 62, 0, 0, 128, 63, 0, 0, 128, 63, 88, 95, 248, 62, 148, 143, 31, 63, 0, 0, 128, 63, 0, 0, 128, 63, 82, 13, 214, 62, 216, 130, 122, 62, 0, 0, 128, 63, 0, 0, 128, 63, 27, 2, 249, 62, 73, 201, 220, 62, 0, 0, 128, 63, 0, 0, 128, 63, 227, 210, 38, 63, 225, 160, 190, 62, 0, 0, 128, 63, 0, 0, 128, 63, 44, 163, 21, 63, 211, 253, 47, 62, 0, 0, 128, 63, 0, 0, 128, 63, 216, 10, 34, 63, 185, 215, 33, 63, 0, 0, 128, 63, 0, 0, 128, 63, 100, 128, 58, 63, 191, 204, 18, 63, 0, 0, 128, 63, 0, 0, 128, 63, 27, 91, 69, 63, 233, 104, 91, 63, 0, 0, 128, 63, 0, 0, 128, 63, 206, 117, 29, 63, 116, 133, 87, 63, 0, 0, 128, 63, 0, 0, 128, 63, 174, 50, 250, 62, 162, 92, 87, 63, 0, 0, 128, 63, 0, 0, 128, 63, 122, 131, 199, 62, 70, 68, 117, 63, 0, 0, 128, 63, 0, 0, 128, 63, 87, 188, 82, 63, 31, 187, 50, 63, 0, 0, 128, 63, 0, 0, 128, 63, 252, 123, 104, 63, 229, 237, 77, 63, 0, 0, 128, 63, 0, 0, 128, 63, 109, 50, 116, 63, 162, 82, 19, 63, 0, 0, 128, 63, 0, 0, 128, 63, 105, 220, 91, 63, 237, 5, 118, 63, 0, 0, 128, 63, 0, 0, 128, 63, 157, 220, 89, 63, 84, 62, 9, 63, 0, 0, 128, 63, 0, 0, 128, 63, 184, 92, 64, 63, 153, 72, 214, 62, 0, 0, 128, 63, 0, 0, 128, 63, 130, 242, 60, 63, 242, 243, 53, 62, 0, 0, 128, 63, 0, 0, 128, 63, 44, 77, 89, 63, 6, 78, 79, 62, 0, 0, 128, 63, 0, 0, 128, 63, 36, 171, 92, 63, 229, 151, 178, 62, 0, 0, 128, 63, 0, 0, 128, 63, 254, 44, 114, 63, 163, 21, 216, 62, 0, 0, 128, 63, 0, 0, 128, 63, 13, 13, 124, 63, 228, 180, 24, 62, 0, 0, 128, 63, 0, 0, 128, 63, 114, 251, 81, 63, 30, 19, 227, 60, 0, 0, 128, 63, 0, 0, 128, 63, 220, 121, 26, 63, 215, 84, 103, 59, 0, 0, 128, 63, 0, 0, 128, 63, 189, 126, 117, 63, 174, 58, 127, 63, 0, 0, 128, 63, 0, 0, 128, 63, 238, 31, 245, 62, 248, 12, 186, 61, 0, 0, 128, 63, 0, 0, 128, 63, 189, 96, 166, 62, 3, 139, 93, 60, 0, 0, 128, 63, 0, 0, 128, 63, 81, 228, 85, 62, 70, 89, 77, 61, 0, 0, 128, 63, 0, 0, 128, 63, 163, 43, 76, 62, 114, 98, 112, 62, 0, 0, 128, 63, 0, 0, 128, 63, 246, 226, 166, 62, 156, 45, 71, 62, 0, 0, 128, 63, 0, 0, 128, 63 ),
"format": "RGBAFloat",
"height": 1,
"mipmaps": false,
"width": 47
}

[sub_resource type="ImageTexture" id=57]
image = SubResource( 60 )
size = Vector2( 47, 1 )

[sub_resource type="ShaderMaterial" id=20]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/debug = false
shader_param/amount = null
shader_param/scale = 0.2
shader_param/scale_random_amount = null
shader_param/respawn_threshold = 0.3
shader_param/emission_box_extents = Vector3( 512, 300, 1 )
shader_param/color_ramp = SubResource( 13 )
shader_param/raw_position_data = SubResource( 57 )

[sub_resource type="CapsuleMesh" id=27]

[sub_resource type="ViewportTexture" id=52]
viewport_path = NodePath("SceneManager/DepthMotion")

[sub_resource type="Image" id=61]
data = {
"data": PoolByteArray( 209, 215, 28, 60, 152, 93, 109, 60, 0, 0, 128, 63, 0, 0, 128, 63, 222, 74, 203, 61, 36, 16, 132, 62, 0, 0, 128, 63, 0, 0, 128, 63, 123, 163, 3, 62, 125, 214, 165, 61, 0, 0, 128, 63, 0, 0, 128, 63, 22, 32, 212, 59, 239, 11, 69, 62, 0, 0, 128, 63, 0, 0, 128, 63, 116, 205, 203, 60, 139, 116, 223, 62, 0, 0, 128, 63, 0, 0, 128, 63, 56, 177, 80, 62, 84, 24, 16, 63, 0, 0, 128, 63, 0, 0, 128, 63, 251, 206, 70, 62, 155, 106, 221, 62, 0, 0, 128, 63, 0, 0, 128, 63, 39, 16, 183, 61, 132, 236, 32, 63, 0, 0, 128, 63, 0, 0, 128, 63, 211, 93, 71, 60, 160, 186, 66, 63, 0, 0, 128, 63, 0, 0, 128, 63, 189, 245, 3, 62, 215, 237, 113, 63, 0, 0, 128, 63, 0, 0, 128, 63, 128, 23, 59, 62, 31, 171, 66, 63, 0, 0, 128, 63, 0, 0, 128, 63, 242, 137, 155, 62, 54, 218, 89, 63, 0, 0, 128, 63, 0, 0, 128, 63, 180, 68, 188, 62, 45, 212, 42, 63, 0, 0, 128, 63, 0, 0, 128, 63, 70, 164, 127, 60, 112, 92, 110, 63, 0, 0, 128, 63, 0, 0, 128, 63, 53, 214, 86, 62, 173, 1, 117, 63, 0, 0, 128, 63, 0, 0, 128, 63, 240, 148, 159, 62, 175, 127, 5, 63, 0, 0, 128, 63, 0, 0, 128, 63, 100, 232, 136, 62, 148, 172, 168, 62, 0, 0, 128, 63, 0, 0, 128, 63, 88, 95, 248, 62, 148, 143, 31, 63, 0, 0, 128, 63, 0, 0, 128, 63, 82, 13, 214, 62, 216, 130, 122, 62, 0, 0, 128, 63, 0, 0, 128, 63, 27, 2, 249, 62, 73, 201, 220, 62, 0, 0, 128, 63, 0, 0, 128, 63, 227, 210, 38, 63, 225, 160, 190, 62, 0, 0, 128, 63, 0, 0, 128, 63, 44, 163, 21, 63, 211, 253, 47, 62, 0, 0, 128, 63, 0, 0, 128, 63, 216, 10, 34, 63, 185, 215, 33, 63, 0, 0, 128, 63, 0, 0, 128, 63, 100, 128, 58, 63, 191, 204, 18, 63, 0, 0, 128, 63, 0, 0, 128, 63, 27, 91, 69, 63, 233, 104, 91, 63, 0, 0, 128, 63, 0, 0, 128, 63, 206, 117, 29, 63, 116, 133, 87, 63, 0, 0, 128, 63, 0, 0, 128, 63, 174, 50, 250, 62, 162, 92, 87, 63, 0, 0, 128, 63, 0, 0, 128, 63, 122, 131, 199, 62, 70, 68, 117, 63, 0, 0, 128, 63, 0, 0, 128, 63, 87, 188, 82, 63, 31, 187, 50, 63, 0, 0, 128, 63, 0, 0, 128, 63, 252, 123, 104, 63, 229, 237, 77, 63, 0, 0, 128, 63, 0, 0, 128, 63, 109, 50, 116, 63, 162, 82, 19, 63, 0, 0, 128, 63, 0, 0, 128, 63, 105, 220, 91, 63, 237, 5, 118, 63, 0, 0, 128, 63, 0, 0, 128, 63, 157, 220, 89, 63, 84, 62, 9, 63, 0, 0, 128, 63, 0, 0, 128, 63, 184, 92, 64, 63, 153, 72, 214, 62, 0, 0, 128, 63, 0, 0, 128, 63, 130, 242, 60, 63, 242, 243, 53, 62, 0, 0, 128, 63, 0, 0, 128, 63, 44, 77, 89, 63, 6, 78, 79, 62, 0, 0, 128, 63, 0, 0, 128, 63, 36, 171, 92, 63, 229, 151, 178, 62, 0, 0, 128, 63, 0, 0, 128, 63, 254, 44, 114, 63, 163, 21, 216, 62, 0, 0, 128, 63, 0, 0, 128, 63, 13, 13, 124, 63, 228, 180, 24, 62, 0, 0, 128, 63, 0, 0, 128, 63, 114, 251, 81, 63, 30, 19, 227, 60, 0, 0, 128, 63, 0, 0, 128, 63, 220, 121, 26, 63, 215, 84, 103, 59, 0, 0, 128, 63, 0, 0, 128, 63, 189, 126, 117, 63, 174, 58, 127, 63, 0, 0, 128, 63, 0, 0, 128, 63, 238, 31, 245, 62, 248, 12, 186, 61, 0, 0, 128, 63, 0, 0, 128, 63, 189, 96, 166, 62, 3, 139, 93, 60, 0, 0, 128, 63, 0, 0, 128, 63, 81, 228, 85, 62, 70, 89, 77, 61, 0, 0, 128, 63, 0, 0, 128, 63, 163, 43, 76, 62, 114, 98, 112, 62, 0, 0, 128, 63, 0, 0, 128, 63, 246, 226, 166, 62, 156, 45, 71, 62, 0, 0, 128, 63, 0, 0, 128, 63 ),
"format": "RGBAFloat",
"height": 1,
"mipmaps": false,
"width": 47
}

[sub_resource type="ImageTexture" id=59]
image = SubResource( 61 )
size = Vector2( 47, 1 )

[sub_resource type="ViewportTexture" id=55]
viewport_path = NodePath("SceneManager/Base")

[sub_resource type="ShaderMaterial" id=46]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/debug = false
shader_param/amount = 47.0
shader_param/scale = 0.5
shader_param/scale_random_amount = null
shader_param/respawn_threshold = 0.3
shader_param/emission_box_extents = Vector3( 512, 300, 1 )
shader_param/source = SubResource( 55 )
shader_param/depth_motion = SubResource( 52 )
shader_param/raw_position_data = SubResource( 59 )

[sub_resource type="QuadMesh" id=38]

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform float highlight_threshold: hint_range(0.0, 1.0) = 0.9;
uniform float highlight_fade_distance: hint_range(0.0, 0.2) = 0.05;
uniform float highlight_lod: hint_range(0.0, 10.0, 0.5) = 2.0;
uniform vec4 highlight_bias: hint_color;
uniform float shadow_threshold: hint_range(0.0, 1.0) = 0.2;
uniform float shadow_fade_distance: hint_range(0.0, 0.2) = 0.05;
uniform float shadow_lod: hint_range(0.0, 10.0, 0.5) = 4.0;
uniform vec4 shadow_bias: hint_color;

uniform sampler2D source;

const float PI = 3.14159265358979323846;

float trig_interpolate(float x, float a, float b) {
	if (x <= a) return 0.0;
	if (x >= b) return 1.0;
	return 0.5 + 0.5 * cos(PI * x / (b - a) + (1.0 - a / (b - a)) * PI);
}

float lum(vec3 c) {
	return 0.3 * c.r + 0.59 * c.g + 0.11 * c.b;
}

vec3 clip_color(vec3 c) {
	vec3 _c = c;
	float l = lum(_c);
	float n = min(_c.r, min(_c.g, _c.b));
	float x = max(_c.r, max(_c.g, _c.b));
	if (n < 0.0) {
		_c.r = l + (((_c.r - l) * l) / (l - n));
		_c.g = l + (((_c.g - l) * l) / (l - n));
		_c.b = l + (((_c.b - l) * l) / (l - n));
	}
	if (x > 1.0) {
		_c.r = l + (((_c.r - l) * (1.0 - l)) / (l - n));
		_c.g = l + (((_c.g - l) * (1.0 - l)) / (l - n));
		_c.b = l + (((_c.b - l) * (1.0 - l)) / (l - n));
	}
	return _c;
}

vec3 set_lum(vec3 c, float l) {
	float d = l - lum(c);
	return clip_color(c + vec3(d));
}

void fragment() {
	vec2 uv = vec2(UV.x, 1.0 - UV.y);
	
	vec4 raw_color;
	float raw_value;
	float highlight; float shadow; float midtone;
	vec4 highlight_color; vec4 shadow_color; vec4 original_color;
	
	raw_color = texture(source, uv);
	
	raw_value = 0.3 * raw_color.r + 0.59 * raw_color.g + 0.11 * raw_color.b;
	
	highlight = trig_interpolate(
		raw_value,
		highlight_threshold - highlight_fade_distance,
		highlight_threshold + highlight_fade_distance
	);
	
	shadow = 1.0 - trig_interpolate(
		raw_value,
		shadow_threshold - shadow_fade_distance,
		shadow_threshold + shadow_fade_distance
	);
	
	highlight_color = vec4(set_lum(
		textureLod(source, uv, shadow_lod).rgb,
		highlight_threshold + highlight_fade_distance
	), 1.0);
	highlight_color = max(textureLod(source, uv, highlight_lod), highlight_color);
	
	shadow_color = vec4(set_lum(
		textureLod(source, uv, shadow_lod).rgb,
		shadow_threshold - shadow_fade_distance
	), 1.0);
	shadow_color = min(textureLod(source, uv, shadow_lod), shadow_color);
	
	original_color = textureLod(source, uv, 0.0);
	
	COLOR = mix(original_color, highlight_color, highlight);
	COLOR = mix(COLOR, shadow_color, shadow);
//	COLOR = mix(COLOR, textureLod(TEXTURE, UV, shadow_lod), shadow);
//	COLOR = vec4(set_lum(original_color.rgb, 0.5), 0.5);
}"

[sub_resource type="ViewportTexture" id=10]
viewport_path = NodePath("ViewportContainer/Viewport")

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/highlight_threshold = 0.9
shader_param/highlight_fade_distance = 0.05
shader_param/highlight_lod = 2.0
shader_param/highlight_bias = null
shader_param/shadow_threshold = 0.2
shader_param/shadow_fade_distance = 0.05
shader_param/shadow_lod = 4.0
shader_param/shadow_bias = Color( 0, 0, 0, 1 )
shader_param/source = SubResource( 10 )

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

void fragment() {
	COLOR = textureLod(TEXTURE, UV, 10);
//	COLOR = vec4(1, 1, 1, 1);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("ViewportContainer/Viewport")

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="SceneManager" parent="." instance=ExtResource( 5 )]

[node name="Camera" parent="SceneManager/Buffered" index="0"]
transform = Transform( -0.940401, 0.0249359, -0.339153, 0, 0.997308, 0.0733261, 0.340068, 0.068956, -0.937869, 1.15891, 5.17152, -0.273441 )
cull_mask = 1048564

[node name="Camera" parent="SceneManager/DepthMotion" index="0"]
transform = Transform( -0.940401, 0.0249359, -0.339153, 0, 0.997308, 0.0733261, 0.340068, 0.068956, -0.937869, 1.15891, 5.17152, -0.273441 )
cull_mask = 1048562

[node name="MeshInstance" parent="SceneManager/DepthMotion/Camera" index="0"]
visible = true

[node name="Camera" parent="SceneManager/Base" index="0"]
transform = Transform( -0.940401, 0.0249359, -0.339153, 0, 0.997308, 0.0733261, 0.340068, 0.068956, -0.937869, 1.15891, 5.17152, -0.273441 )
cull_mask = 1048561

[node name="Pivot" parent="SceneManager" index="3"]
transform = Transform( -0.940401, -0.0511923, -0.336192, 0, 0.988604, -0.150536, 0.340068, -0.141564, -0.929685, 3.13308, 3.97379, 5.1858 )

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.870588, 0.803922, 0.756863, 1 )

[node name="BrushStrokesContainer1" type="ViewportContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true

[node name="Viewport" type="Viewport" parent="BrushStrokesContainer1"]
size = Vector2( 1024, 600 )
transparent_bg = true
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="Strokes" parent="BrushStrokesContainer1/Viewport" instance=ExtResource( 1 )]
visible = false
material = SubResource( 17 )
amount = 47
preprocess = 600.0
draw_order = 0
process_material = SubResource( 20 )
texture = ExtResource( 3 )

[node name="MeshInstance" type="MeshInstance" parent="BrushStrokesContainer1/Viewport"]
visible = false
layers = 8
mesh = SubResource( 27 )

[node name="Strokes3D" type="Particles" parent="BrushStrokesContainer1/Viewport"]
layers = 8
material_override = ExtResource( 8 )
amount = 47
draw_order = 2
process_material = SubResource( 46 )
draw_pass_1 = SubResource( 38 )
script = ExtResource( 7 )

[node name="Camera" type="Camera" parent="BrushStrokesContainer1/Viewport/Strokes3D"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3.07397 )
visible = false
cull_mask = 1048568
projection = 1
current = true

[node name="TextureRect2" type="TextureRect" parent="."]
visible = false
material = SubResource( 11 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 4 )
expand = true

[node name="TextureRect" type="TextureRect" parent="."]
visible = false
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 8 )

[editable path="SceneManager"]
[editable path="SceneManager/Pivot/DummyCamera"]
