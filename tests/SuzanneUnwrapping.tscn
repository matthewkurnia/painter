[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/3d/common/suzanne/Suzanne.gltf" type="PackedScene" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

varying vec3 color_vertex_world_position;
varying vec3 color_normal;

uniform bool is_getting_normals = false;

uniform float capture_size = 1;
uniform vec3 unwrap_location = vec3(0, 0, 0);
uniform float unwrap_scale = 1.0;

void vertex()
{
	color_vertex_world_position =  (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
	color_normal = (WORLD_MATRIX * vec4(NORMAL, 1.0)).xyz;
	
	// Placed in separate steps for comprehension,
	// it can be simplified in a single row.
	vec2 step1 = (UV - 0.5) * capture_size;
	vec3 step2 = vec3(step1.x, step1.y, 0);
	vec3 step3 = step2 + unwrap_location; 
	vec3 final_position = step3 * unwrap_scale;
	VERTEX = final_position;
}

void fragment()
{
	if(!is_getting_normals) {
		ALBEDO = color_vertex_world_position;
	} else {
		ALBEDO = color_normal;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/is_getting_normals = false
shader_param/capture_size = 1.0
shader_param/unwrap_location = Vector3( 0, 0, 0 )
shader_param/unwrap_scale = 1.0

[node name="Suzanne" instance=ExtResource( 1 )]

[node name="Suzanne" parent="." index="0"]
material/0 = SubResource( 2 )
