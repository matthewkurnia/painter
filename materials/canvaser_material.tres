[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[ext_resource path="res://assets/strokes/dry_1.png" type="Texture" id=1]
[ext_resource path="res://assets/2d/leinwand-orange-textur-hintergrund.png" type="Texture" id=2]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D source;
uniform sampler2D brush_texture;
uniform sampler2D canvas;
uniform float canvas_roughness;

const vec2 sampling_offsets[4] = {
	vec2(-128, 0),
	vec2(128, 0),
	vec2(0, -128),
	vec2(0, 128)
};

float grainify(float x, float a) {
	x -= 0.5;
	a -= 0.5;
	return max(min(canvas_roughness * (x + a) + 0.5, 1.0), 0.0);
}

void fragment() {
	vec2 normalized_position = COLOR.xy;
	float angle = COLOR.z;
	float scale = COLOR.w;
	mat3 rotation;
	rotation[0] = vec3(cos(angle), -sin(angle), 0.0);
	rotation[1] = vec3(sin(angle), cos(angle), 0.0);
	rotation[2] = vec3(0.0, 0.0, 1.0);
	
	vec2 uv = normalized_position * vec2(1, -1) + vec2(0, 1);
	
	COLOR.rgb = texture(source, uv).rgb;
//	COLOR.rgb = mix(
//		textureLod(SCREEN_TEXTURE, SCREEN_UV, 5.0).rgb,
//		COLOR.rgb, 0.7
//	);
//	COLOR.r = COLOR.r;
	COLOR.a = texture(brush_texture, UV).a;
//	COLOR.a = COLOR.a * texture(brush_texture, UV).a;
	COLOR.a = grainify(
		texture(canvas, SCREEN_UV).x,
		COLOR.a
	);
//	COLOR.a = texture(canvas, SCREEN_UV).r;
	
	if (scale == 0.0) {
		COLOR.rgb = vec3(0);
		COLOR.a = 1.0;
	}
}
"

[resource]
shader = SubResource( 5 )
shader_param/canvas_roughness = 4.0
shader_param/brush_texture = ExtResource( 1 )
shader_param/canvas = ExtResource( 2 )
